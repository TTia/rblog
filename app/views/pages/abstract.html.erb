<div class='page'>
  <img src="/assets/thesis_defense.png" id="abstract_img"/>
  <p>
    Nell’articolo ”A comparative Study of Maintainability of Web Application on J2EE,
    .NET and Ruby on Rails”~[1] scritto da Look Fang Fang Stella, Stan Jarzabek and
    Bimlesh Wadhwa nel 2008 viene discusso il processo di introduzione di una nuova
    funzionalità sul codice esistente di un’applicazione Web e delle ripercussioni di que-
    sta operazione nelle diverse piattaforme. Ruby on Rails, Spring e .NET condividono
    il pattern architetturale Model View Controller, descritto in seguito, e si prestano
    dunque ad un confronto alla pari: dall’articolo emerge come il neonato Ruby on
    Rails 1 , si presentasse fin da subito come una piattaforma moderna ed adeguata
    alla metodologia Agile, offrendo supporto ai relativi processi di sviluppo. Grazie
    ad una struttura più lineare, alla semplicità di definizione dei test e combinando il
    potere espressivo di Ruby, gli autori hanno individuato in RoR il framework che ha il
    minor impatto sul progetto per numero di linee di codice modificate ed al contempo
    mantiene il codice maggiormente comprensibile e di conseguenza più semplicemente
    modificabile.
  </p>
  <p>
    Stella, Jarzabek e Wadhwa concludono il proprio lavoro segnalando come il cam-
    po delle applicazioni web sia in continuo fermento ed in rapida evoluzione ed assu-
    mono anche che nuovi framework potrebbero emergere in futuro ed essere meritevoli
    di attenzione.
  </p>
  <p>
    L’obbiettivo di questa tesi è di riprendere la prospettiva utilizzata per lo svilup-
    po di applicazioni web dai tre ricercatori dell’università di Singapore, analizzando
    tre framework, scelti in funzione di diffusione, novità e particolarità ma concen-
    trando l’attenzione sull’implementazione di test di accettazione automatici piutto-
    sto che alla modificabilità. I framework scelti sono Ruby on Rails, Spring MVC
    e ASP.NET MVC5. Nel corso della tesi verrà trattata l’interpretazione data da
    ciascun framework del pattern Model View Controller e documentato lo svilup-
    po delle applicazioni web in funzione dell’implementazione dei test di accettazione
    automatici.
  </p>
  <p>
    Al fine di focalizzare l’attenzione sullo sviluppo e sulle problematiche dei test
    di accettazione è stato scelto di sviluppare una semplice applicazione web, ripren-
    dendo l’esempio del blog proposto nell’articolo in forma semplificata. Sono state
    sviluppati tre progetti, che offrono le stesse funzionalità e condividono l’aspetto e le
    funzionalità dell’interfaccia grafica, presentando però delle ovvie differenze relative
    all’implementazione. Inoltre è stato scelto di sfruttare il più possibile nuove tecno-
    logie per verificare che gli strumenti per la definizione dei test di accettazione siano
    al passo con un settore, quale è lo sviluppo di applicazioni web, molto dinamico e
    variegato. Nel corso della tesi verranno documentati gli strumenti scelti, verifican-
    done le potenzialità nei diversi scenari di test, effettuando confronti dove possibile
    ed evidenziando pregi o carenze rispetto alle controparti.
  </p>
</div>
